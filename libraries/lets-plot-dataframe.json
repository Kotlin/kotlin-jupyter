{
  "description": "A bridge between Lets-Plot and dataframe libraries",
  "properties": {
    "v": "0.0.10-dev-19",
    "api": "1.2.0",
    "js": "1.5.6",
    "isolatedFrame": ""
  },
  "link": "https://github.com/JetBrains/lets-plot-kotlin",
  "repositories": [
    "https://kotlin.bintray.com/kotlin-datascience",
    "https://jetbrains.bintray.com/lets-plot-maven"
  ],
  "dependencies": [
    "org.jetbrains.kotlin:lets-plot-dsl:$v"
  ],
  "imports": [
    "jetbrains.letsPlot.*",
    "jetbrains.letsPlot.geom.*",
    "jetbrains.letsPlot.stat.*",
    "jetbrains.datalore.plot.*",
    "jetbrains.letsPlot.intern.*",
    "jetbrains.letsPlot.scale.*",
    "org.jetbrains.kotlin.letsPlot.*"
  ],
  "init": [
    "import jetbrains.letsPlot.LetsPlot",
    "import jetbrains.letsPlot.frontend.NotebookFrontendContext",
    "val isolatedFrameParam = if(\"$isolatedFrame\".isNotEmpty()) \"$isolatedFrame\".toBoolean() else null",
    "val frontendContext = LetsPlot.setupNotebook(\"$js\", isolatedFrameParam) {DISPLAY(HTML(it))}",
    "LetsPlot.apiVersion = \"$api\"",
    "// Load library JS",
    "DISPLAY(HTML(frontendContext.getConfigureHtml()))"
  ],
  "renderers": {
    "jetbrains.letsPlot.intern.Plot": "HTML(frontendContext.getHtml($it))",
    "jetbrains.letsPlot.GGBunch": "HTML(frontendContext.getHtml($it))",
    "org.jetbrains.kotlin.letsPlot.PlotSpec": "HTML(PlotHtmlHelper.getDynamicDisplayHtmlForRawSpec(($it as org.jetbrains.kotlin.letsPlot.PlotSpec).spec))"
  }
}
